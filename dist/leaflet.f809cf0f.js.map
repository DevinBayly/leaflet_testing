{"version":3,"sources":["index.js"],"names":["stamen","layer","L","StamenTileLayer","mymap","Map","center","LatLng","zoom","addLayer","standard","pos","map","setView","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","markersBasic","ob","m","collection","push","marker","c","circle","latlng","config","addTo","arrayMarkers","number","scale","i","angle","Math","PI","cos","sin","window","onload","am","create","console","log","getMarkers","markers","markupMap","includeMarker","markupPositions"],"mappings":";AACA,IAAIA,EAAQ,WACJC,IAAAA,EAAQ,IAAIC,EAAEC,gBAAgB,SAC9BC,EAAQ,IAAIF,EAAEG,IAAI,QAAQ,CAC1BC,OAAQ,IAAIJ,EAAEK,OAAO,IAAI,KACzBC,KAAK,IAIFJ,OAFPA,EAAMK,SAASR,GAERG,GAGPM,EAAW,SAACC,GACRP,IAAAA,EAAQ,IAAIF,EAAEU,IAAI,SAASC,QAAQF,EAAI,IACvCV,EAASC,EAAEY,UAAU,qFAAsF,CAC3GC,YAAa,0NACbC,QAAS,EACTC,GAAI,qBACJC,SAAU,IACVC,YAAa,EAEbC,YAAa,sGAGVhB,OADPA,EAAMK,SAASR,GACRG,GAIPiB,EAAe,WACXC,IAAAA,EAAK,CACTA,WAAe,GAEfA,cAAmB,SAACC,GAChBD,EAAGE,WAAWC,KAAKvB,EAAEwB,OAAOH,KAGhCD,cAAmB,SAACK,GAChBL,EAAGE,WAAWC,KAAKvB,EAAE0B,OAAOD,EAAEE,OAAOF,EAAEG,UAG3CR,gBAAoB,WAAK,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACRA,IAAAA,IAAe,EAAfA,EAAAA,EAAGE,WAAY,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAA,EAAA,MACtBO,MAAMT,EAAGV,MAFM,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAKzBU,UAAc,SAACpB,GACXoB,EAAGV,IAAMV,IAENoB,OAAAA,GAGPU,EAAe,WACXV,IAAAA,EAAK,CACTA,OAAY,SAAChB,EAAO2B,EAAOC,GACvBZ,EAAGU,aAAe,GACb,IAAA,IAAIG,EAAG,EAAEA,EAAGF,EAAOE,IAAK,CACrBC,IAAAA,EAAQ,EAAEC,KAAKC,GAAGL,EAAOE,EAC7Bb,EAAGU,aAAaP,KAAK,CAACnB,EAAO,GAAG+B,KAAKE,IAAIH,GAAOF,EAAM5B,EAAO,GAAG+B,KAAKG,IAAIJ,GAAOF,MAGxFZ,WAAe,WACJA,OAAAA,EAAGU,eAEPV,OAAAA,GAEXmB,OAAOC,OAAS,WACR/B,IAAAA,EAAM,CAAC,MAAM,QACbgC,EAAKX,IACTW,EAAGC,OAAOjC,EAAI,GAAG,IACjBkC,QAAQC,IAAIH,EAAGI,cACXnC,IAAAA,EAAMF,EAASC,GACfqC,EAAU3B,IACd2B,EAAQC,UAAUrC,GAPA,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAQJ+B,IAAAA,IAAgB,EAAhBA,EAAAA,EAAGI,aAAa,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAArBxB,IAAAA,EAAqB,EAAA,MAC1ByB,EAAQE,cAAc3B,IATR,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAWlByB,EAAQG","file":"leaflet.f809cf0f.js","sourceRoot":"..","sourcesContent":["\nlet stamen =()=> {\n    let layer = new L.StamenTileLayer(\"toner\")\n    var mymap = new L.Map(\"mapid\",{\n        center: new L.LatLng(37,-122),\n        zoom:5\n    })\n    mymap.addLayer(layer)\n    // this part creates the tilelayer underneath so that we can actually see the map, not only the window\n    return mymap\n}\n\nlet standard = (pos)=> {\n    let mymap = new L.map('mapid').setView(pos,13)\n    let layer  = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 2,\n        id: 'mapbox/streets-v11',\n        tileSize: 512,\n        zoomOffset: -1,\n        // this requires getting a map box account by the way\n        accessToken: 'pk.eyJ1IjoidHVjc29ubWFwdGltZSIsImEiOiJjazZ0dDlzdDAwMnF3M25xc3Y4OXZyMDN5In0.QWD_CRkng0_bz5I_-t4nXA'\n    })\n    mymap.addLayer(layer)\n    return mymap\n}\n\n// markers\nlet markersBasic = ()=> {\n    let ob = {}\n    ob.collection =[]   \n    // markers, m should be a [num,num]\n    ob.includeMarker = (m)=> {\n        ob.collection.push(L.marker(m))\n    }\n    // needs to be something that we can call addTo(mymap)\n    ob.includeCircle = (c)=> {\n        ob.collection.push(L.circle(c.latlng,c.config))\n    }\n\n    ob.markupPositions =()=> {\n        for(let e of ob.collection) {\n            e.addTo(ob.map)\n        }\n    }\n    ob.markupMap =(L)=> {\n        ob.map = L\n    }\n    return ob\n}\n\nlet arrayMarkers = ()=> {\n    let ob = {}\n    ob.create = (center,number,scale)=> {\n        ob.arrayMarkers = []\n        for (let i =0;i< number;i++) {\n            let angle = 2*Math.PI/number*i\n            ob.arrayMarkers.push([center[0]+Math.cos(angle)*scale,center[1]+Math.sin(angle)*scale])\n        }\n    }\n    ob.getMarkers =()=> {\n        return ob.arrayMarkers\n    }\n    return ob\n}\nwindow.onload = () => {\n    let pos = [51.89,1.4762]\n    let am = arrayMarkers()\n    am.create(pos,20,.1)\n    console.log(am.getMarkers())\n    let map = standard(pos)\n    let markers = markersBasic()\n    markers.markupMap(map)\n    for (let m of am.getMarkers()){\n        markers.includeMarker(m)\n    }\n    markers.markupPositions()\n\n\n\n}"]}