{"version":3,"sources":["index.js"],"names":["stamen","layer","L","StamenTileLayer","mymap","Map","center","LatLng","zoom","addLayer","legendBase","ob","console","log","legend","control","position","onAdd","map","d","DomUtil","create","grades","Array","fill","e","i","length","innerHTML","Math","random","standard","pos","setView","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","markersBasic","m","collection","push","marker","c","circle","latlng","config","addTo","arrayMarkers","number","scale","angle","PI","cos","sin","window","onload","am","getMarkers","markers","markupMap","includeMarker","markupPositions","leg"],"mappings":"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","file":"leaflet.37178663.js","sourceRoot":"..","sourcesContent":["\nlet stamen =()=> {\n    let layer = new L.StamenTileLayer(\"toner\")\n    var mymap = new L.Map(\"mapid\",{\n        center: new L.LatLng(37,-122),\n        zoom:5\n    })\n    mymap.addLayer(layer)\n    // this part creates the tilelayer underneath so that we can actually see the map, not only the window\n    return mymap\n}\nlet legendBase = ()=> {\n    let ob = {}\n    ob.create =()=> {\n        console.log(\"creating legend base\");\n        \n        ob.legend = L.control({position:\"bottomright\"})\n        // called when we use addTo\n        ob.legend.onAdd = (map)=> {\n            console.log(\"adding legend\")\n            let d = L.DomUtil.create('div','info legend'),\n            grades = Array(20).fill(0).map((e,i)=> {\n                return i*10\n            }),\n            labels =[]\n            console.log(grades)\n            for (let i =0;i < grades.length;i++) {\n                d.innerHTML+= `<i style=\"background:rgb(${Math.random()*255},${Math.random()*255},${Math.random()*255});\"></i>text<br>`\n            }\n            return d\n        }\n\n    }\n    return ob\n}\n//\nlet standard = (pos)=> {\n    let mymap = new L.map('mapid').setView(pos,13)\n    let layer  = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 2,\n        id: 'mapbox/streets-v11',\n        tileSize: 512,\n        zoomOffset: -1,\n        // this requires getting a map box account by the way\n        accessToken: 'pk.eyJ1IjoidHVjc29ubWFwdGltZSIsImEiOiJjazZ0dDlzdDAwMnF3M25xc3Y4OXZyMDN5In0.QWD_CRkng0_bz5I_-t4nXA'\n    })\n    mymap.addLayer(layer)\n    return mymap\n}\n\n// markers\nlet markersBasic = ()=> {\n    let ob = {}\n    ob.collection =[]   \n    // markers, m should be a [num,num]\n    ob.includeMarker = (m)=> {\n        ob.collection.push(L.marker(m))\n    }\n    // needs to be something that we can call addTo(mymap)\n    ob.includeCircle = (c)=> {\n        ob.collection.push(L.circle(c.latlng,c.config))\n    }\n\n    ob.markupPositions =()=> {\n        for(let e of ob.collection) {\n            e.addTo(ob.map)\n        }\n    }\n    ob.markupMap =(L)=> {\n        ob.map = L\n    }\n    return ob\n}\n\nlet arrayMarkers = ()=> {\n    let ob = {}\n    ob.create = (center,number,scale)=> {\n        ob.arrayMarkers = []\n        for (let i =0;i< number;i++) {\n            let angle = 2*Math.PI/number*i\n            ob.arrayMarkers.push([center[0]+Math.cos(angle)*scale,center[1]+Math.sin(angle)*scale])\n        }\n    }\n    ob.getMarkers =()=> {\n        return ob.arrayMarkers\n    }\n    return ob\n}\nwindow.onload = () => {\n    let pos = [51.89,1.4762]\n    let am = arrayMarkers()\n    am.create(pos,20,.1)\n    console.log(am.getMarkers())\n    let map = standard(pos)\n    let markers = markersBasic()\n    markers.markupMap(map)\n    for (let m of am.getMarkers()){\n        markers.includeMarker(m)\n    }\n    markers.markupPositions()\n    let leg = legendBase()\n    leg.create()\n    console.log(leg)\n    leg.legend.addTo(map)\n\n\n\n}"]}